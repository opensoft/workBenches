{
	"name": "Python DevBench Container - The Monster",
	"dockerComposeFile": "docker-compose.yml",
	"service": "python_bench",
	"workspaceFolder": "/workspace",
	
	// Mount host home directory directly for seamless config/SSH access
	"mounts": [
		// Projects folder mounted to workspace - gives access to all bench projects
		"source=${localEnv:HOME}/projects,target=/workspace,type=bind,consistency=cached",
		// Host home directory mounted directly - gives access to SSH, configs, dotfiles
		"source=${localEnv:HOME},target=/home/brett,type=bind,consistency=cached"
	],
	
	// Features are now built into the Dockerfile

	// Configure tool-specific properties
	"customizations": {
		"vscode": {
			"extensions": [
				"ms-python.python",
				"ms-python.flake8",
				"ms-python.isort",
				"ms-python.black-formatter",
				"ms-python.mypy-type-checker",
				"ms-python.pylint",
				"ms-toolsai.jupyter",
				"ms-toolsai.jupyter-keymap",
				"ms-toolsai.jupyter-renderers",
				"ms-toolsai.vscode-jupyter-cell-tags",
				"ms-toolsai.vscode-jupyter-slideshow",
				"charliermarsh.ruff",
				"ms-python.debugpy",
				"donjayamanne.python-environment-manager",
				"donjayamanne.python-extension-pack",
				"ms-vscode.vscode-json",
				"ms-azuretools.vscode-docker",
				"GitHub.copilot",
				"GitHub.copilot-chat",
				"ms-vscode.remote-containers",
				"esbenp.prettier-vscode",
				"humao.rest-client",
				"ms-playwright.playwright",
				"ms-vscode-remote.remote-ssh",
				"ms-vscode.test-adapter-converter",
				"njpwerner.autodocstring",
				"tamasfe.even-better-toml",
				"ms-python.vscode-pylance",
				"kevinrose.vsc-python-indent",
				"wholroyd.jinja",
				"ms-vscode.cmake-tools",
				"twxs.cmake",
				"redhat.vscode-yaml",
				"bbenoist.nix",
				"ms-vscode.powershell"
			],
			"settings": {
				"terminal.integrated.defaultProfile.linux": "zsh",
				"python.defaultInterpreterPath": "/usr/local/bin/python",
				"python.formatting.provider": "black",
				"python.formatting.blackPath": "/usr/local/bin/black",
				"python.linting.enabled": true,
				"python.linting.pylintEnabled": true,
				"python.linting.flake8Enabled": true,
				"python.linting.mypyEnabled": true,
				"python.linting.banditEnabled": true,
				"python.testing.pytestEnabled": true,
				"python.testing.unittestEnabled": false,
				"python.testing.pytestArgs": [
					"."
				],
				"python.sortImports.args": [
					"--profile", "black"
				],
				"python.analysis.autoImportCompletions": true,
				"python.analysis.completeFunctionParens": true,
				"python.analysis.autoSearchPaths": true,
				"python.analysis.diagnosticMode": "workspace",
				"python.analysis.typeCheckingMode": "basic",
				"jupyter.askForKernelRestart": false,
				"jupyter.interactiveWindow.creationMode": "perFile",
				"notebook.cellToolbarLocation": {
					"default": "right",
					"jupyter-notebook": "left"
				},
				"ruff.args": ["--config=/workspace/.ruff.toml"],
				"files.associations": {
					"*.py": "python",
					"*.pyi": "python", 
					"*.pyx": "python",
					"*.pxd": "python",
					"*.pxi": "python",
					"requirements*.txt": "pip-requirements",
					"*.toml": "toml",
					"*.yml": "yaml",
					"*.yaml": "yaml",
					"Dockerfile*": "dockerfile",
					"*.jinja": "jinja",
					"*.jinja2": "jinja"
				},
				"python.condaPath": "/opt/miniconda3/bin/conda",
				"python.poetryPath": "/usr/local/bin/poetry",
				"python.pipenvPath": "/usr/local/bin/pipenv"
			}
		}
	},

	// Use 'forwardPorts' to make a list of ports inside the container available locally
	"forwardPorts": [3000, 5000, 8000, 8080, 8888, 8501, 9000],

	// All setup is done in the Dockerfile

	// Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root
	"remoteUser": "brett"
}